

-- ######################################################
-- #########									#########
-- #########       PROCEDIMIENTOS RENTA         #########
-- #########									#########
-- ######################################################


DROP PROCEDURE IF EXISTS CREAR_RENTA;
DELIMITER //
CREATE PROCEDURE CREAR_RENTA(USUARIO_EXT CHAR(120), NOMBRE_PELICULA_EXT CHAR(120))
BEGIN
	DECLARE ID_USR INT;
    DECLARE ID_M INT;
    DECLARE ID_R INT;
	SET ID_USR  = (SELECT USUARIO.ID_MEMBRESIA FROM USUARIO WHERE USUARIO.USUARIO = USUARIO_EXT);
    SET ID_M = (SELECT  PELICULA.ID_PELICULA FROM PELICULA WHERE NOMBRE_PELICULA = NOMBRE_PELICULA_EXT);
    SET ID_R = (SELECT ID_RENTA FROM RENTA WHERE ID_PELICULA = ID_M AND ID_MEMBRESIA = ID_USR AND ESTADO = 0);
    IF ID_USR >0 THEN
		IF ID_M >0 THEN
			IF ID_R >0 THEN
				SELECT "PAGA LA RENTA" AS MENSAJE;
            ELSE
			INSERT INTO RENTA(ID_PELICULA,ID_MEMBRESIA,ESTADO) VALUES (ID_M,ID_USR,0);
            END IF;
        ELSE
			SELECT "LA PELICULA NO EXISTE" AS MENSAJE;
        END IF;
	ELSE
		SELECT "EL USUARIO NO EXISTE" AS MENSAJE;
    END IF;
END //
DELIMITER ;
DROP PROCEDURE IF EXISTS PAGAR_RENTA;
DELIMITER //
CREATE PROCEDURE PAGAR_RENTA(USUARIO_EXT CHAR(120), NOMBRE_PELICULA_EXT CHAR(120))
BEGIN
	DECLARE ID_USR INT;
    DECLARE ID_M INT;
    DECLARE ID_R INT;
    SET ID_USR = (SELECT USUARIO.ID_MEMBRESIA FROM USUARIO WHERE USUARIO = USUARIO_EXT);
    SET ID_M = (SELECT PELICULA.ID_PELICULA FROM PELICULA WHERE PELICULA.NOMBRE_PELICULA = NOMBRE_PELICULA_EXT);
    SET ID_R = (SELECT ID_RENTA FROM RENTA WHERE ID_PELICULA = ID_M AND ID_MEMBRESIA = ID_USR AND ESTADO = 0);
    IF(ID_R >0) THEN
		UPDATE RENTA 
        SET ESTADO = 1
        WHERE ID_RENTA = ID_R;
    ELSE
		SELECT "NO SE HA RENTADO" AS MENSAJE;
    END IF;
END //
DELIMITER ;
DROP PROCEDURE IF EXISTS RENTAS;
DELIMITER //
CREATE PROCEDURE RENTAS()
BEGIN
	SELECT RENTA.ID_RENTA, PELICULA.NOMBRE_PELICULA, USUARIO.USUARIO, RENTA.ESTADO FROM RENTA
    INNER JOIN PELICULA ON PELICULA.ID_PELICULA = RENTA.ID_PELICULA
    INNER JOIN USUARIO ON USUARIO.ID_MEMBRESIA = RENTA.ID_MEMBRESIA;
END //
DELIMITER ;
DROP PROCEDURE IF EXISTS RENTA_USR;

DELIMITER //
CREATE PROCEDURE RENTA_USR(USUARIO_EXT CHAR(120))
BEGIN
 	SELECT RENTA.ID_RENTA, PELICULA.NOMBRE_PELICULA, USUARIO.USUARIO, RENTA.ESTADO FROM RENTA
    INNER JOIN PELICULA ON PELICULA.ID_PELICULA = RENTA.ID_PELICULA
    INNER JOIN USUARIO ON USUARIO.ID_MEMBRESIA = RENTA.ID_MEMBRESIA
    WHERE USUARIO.USUARIO = USUARIO_EXT;
END //

DELIMITER ;
DROP PROCEDURE IF EXISTS RENTA_PELICULA;
DELIMITER //
CREATE PROCEDURE RENTA_PELICULA(NOMBRE_PELICULA_EXT CHAR(120))
BEGIN
	SELECT RENTA.ID_RENTA, PELICULA.NOMBRE_PELICULA, USUARIO.USUARIO, RENTA.ESTADO FROM RENTA
    INNER JOIN PELICULA ON PELICULA.ID_PELICULA = RENTA.ID_PELICULA
    INNER JOIN USUARIO ON USUARIO.ID_MEMBRESIA = RENTA.ID_MEMBRESIA
    WHERE PELICULA.NOMBRE_PELICULA = NOMBRE_PELICULA_EXT;
END //

